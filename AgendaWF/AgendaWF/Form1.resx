<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>